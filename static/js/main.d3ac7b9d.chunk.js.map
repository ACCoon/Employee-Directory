{"version":3,"sources":["components/header/index.js","utils/API.js","components/TableRow/index.js","components/table/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","API","axios","get","then","res","data","results","map","emp","picture","medium","name","first","last","email","phone","TableRow","props","src","Table","state","emps","filteredEmps","search","filterEmps","event","setState","target","value","toLowerCase","filtEmps","filter","includes","console","log","this","getEmps","catch","err","empsSorted","unsortEmps","dataset","order","sort","a","b","onChange","className","onClick","sortEmps","data-order","length","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAMeA,MAJf,WACE,OAAO,qD,iDCeMC,MAhBf,WACI,OAAOC,IAAMC,IACX,6EAEDC,MAAK,SAAAC,GAEJ,OADaA,EAAIC,KAAKC,QACVC,KAAI,SAAAC,GACd,MAAM,CACJC,QAASD,EAAIC,QAAQC,OACrBC,KAAK,GAAD,OAAKH,EAAIG,KAAKC,MAAd,YAAuBJ,EAAIG,KAAKE,MACpCC,MAAON,EAAIM,MACXC,MAAOP,EAAIO,cCANC,MAXf,SAAmBC,GACjB,OACE,+BACE,6BAAI,qBAAKC,IAAKD,EAAMT,IAAIC,YACxB,6BAAKQ,EAAMT,IAAIG,OACf,6BAAKM,EAAMT,IAAIM,QACf,6BAAKG,EAAMT,IAAIO,UAJRE,EAAMT,IAAIO,QCkERI,E,4MAjEbC,MAAQ,CACNC,KAAM,GACNC,aAAc,GACdC,OAAQ,I,EA2BVC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEH,OAAQE,EAAME,OAAOC,MAAMC,gBAC3C,IAEMC,EAFa,EAAKV,MAAMC,KAEFU,QAAO,SAAAvB,GAAG,OAAIA,EAAIG,KAAKkB,cAAcG,SAAS,EAAKZ,MAAMG,WAErFU,QAAQC,IAAIJ,GAEZ,EAAKJ,SAAS,CAAEJ,aAAcQ,K,uDAhChC,WACEK,KAAKC,Y,qBAGP,WAAW,IAAD,OACRpC,IACGG,MAAK,SAAAC,GAAG,OAAI,EAAKsB,SAAS,CAAEL,KAAMjB,OAClCiC,OAAM,SAAAC,GAAG,OAAIL,QAAQC,IAAII,Q,sBAG9B,SAASb,GACP,IACIc,EADEC,EAAaL,KAAKf,MAAMC,KAEK,SAA/BI,EAAME,OAAOc,QAAQC,OACvBH,EAAaC,EAAWG,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEjC,KAAKkB,cAAgBgB,EAAElC,KAAKkB,cAAiB,GAAK,KAC5FJ,EAAME,OAAOc,QAAQC,MAAQ,OACW,QAA/BjB,EAAME,OAAOc,QAAQC,QAC9BH,EAAaC,EAAWG,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEjC,KAAKkB,cAAgBgB,EAAElC,KAAKkB,eAAkB,EAAI,KAC5FJ,EAAME,OAAOc,QAAQC,MAAQ,QAG/BP,KAAKT,SAAS,CAAEL,KAAMkB,M,oBAcxB,WAAU,IAAD,SACwBJ,KAAKf,MAA5BC,EADD,EACCA,KAAMC,EADP,EACOA,aACd,OACE,gCACE,0BAAUwB,SAAUX,KAAKX,WAAYI,MAAOO,KAAKf,MAAMG,SACvD,wBAAOwB,UAAU,2CAAjB,UACE,gCACE,+BACE,uBACA,oBAAIC,QAAS,SAACvB,GAAD,OAAW,EAAKwB,SAASxB,IAAQyB,aAAW,OAAzD,kBACA,uCACA,4CAGJ,gCACG5B,EAAa6B,OAAS7B,EAAaf,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,CAAUA,IAAKA,OAC1Da,EAAKd,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,CAAUA,IAAKA,mB,GA1D3B4C,IAAMC,W,MCUXC,MATf,WACE,OACE,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtD,MAAK,YAAkD,IAA/CuD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d3ac7b9d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return <h1>Employee Directory</h1>;\r\n}\r\n\r\nexport default Header;","import axios from \"axios\";\r\n\r\nfunction API() {\r\n    return axios.get(\r\n      \"https://randomuser.me/api/?results=25&nat=us&inc=name,email,phone,picture\"\r\n    )\r\n    .then(res => {\r\n      const emps = res.data.results;\r\n      return emps.map(emp => {\r\n        return{\r\n          picture: emp.picture.medium,\r\n          name: `${emp.name.first} ${emp.name.last}`,\r\n          email: emp.email,\r\n          phone: emp.phone\r\n        };\r\n      });\r\n    });\r\n  }\r\nexport default API;\r\n","import React from \"react\";\r\n\r\nfunction TableRow( props ) {\r\n  return (\r\n    <tr key={props.emp.phone}>\r\n      <td><img src={props.emp.picture} /></td>\r\n      <td>{props.emp.name}</td>\r\n      <td>{props.emp.email}</td>\r\n      <td>{props.emp.phone}</td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default TableRow;","import React from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport TableRow from \"../TableRow\";\r\n\r\nclass Table extends React.Component {\r\n  state = {\r\n    emps: [],\r\n    filteredEmps: [],\r\n    search: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEmps();\r\n  }\r\n\r\n  getEmps() {\r\n    API()\r\n      .then(res => this.setState({ emps: res }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  sortEmps(event) {\r\n    const unsortEmps = this.state.emps;\r\n    let empsSorted;\r\n    if (event.target.dataset.order === \"desc\") {\r\n      empsSorted = unsortEmps.sort((a, b) => (a.name.toLowerCase() > b.name.toLowerCase()) ? 1 : -1);\r\n      event.target.dataset.order = \"asc\"\r\n    } else if (event.target.dataset.order === \"asc\") {\r\n      empsSorted = unsortEmps.sort((a, b) => (a.name.toLowerCase() > b.name.toLowerCase()) ? -1 : 1);\r\n      event.target.dataset.order = \"desc\"\r\n    }\r\n\r\n    this.setState({ emps: empsSorted });\r\n  }\r\n\r\n  filterEmps = (event) => {\r\n    this.setState({ search: event.target.value.toLowerCase() })\r\n    const unfiltEmps = this.state.emps;\r\n    \r\n    const filtEmps = unfiltEmps.filter(emp => emp.name.toLowerCase().includes(this.state.search));\r\n\r\n    console.log(filtEmps);\r\n\r\n    this.setState({ filteredEmps: filtEmps });\r\n  }\r\n\r\n  render() {\r\n    const { emps, filteredEmps } = this.state;\r\n    return (\r\n      <div>\r\n        <textarea onChange={this.filterEmps} value={this.state.search} />\r\n        <table className=\"table-striped table-bordered table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th onClick={(event) => this.sortEmps(event)} data-order=\"desc\">Name</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredEmps.length ? filteredEmps.map(emp => <TableRow emp={emp} />)\r\n              : emps.map(emp => <TableRow emp={emp} />)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table;","import './App.css';\nimport Header from './components/header';\nimport Table from './components/table';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}